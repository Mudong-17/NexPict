name: Build/release Electron app

on:
  push:
    tags:
      - v*.*.*
  workflow_dispatch:

jobs:
  release:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node-version: [20]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Dependencies
        run: pnpm install --frozen-lockfile

      - name: build-linux
        if: matrix.os == 'ubuntu-latest'
        run: pnpm make:linux

      - name: build-mac
        if: matrix.os == 'macos-latest'
        run: pnpm make:mac

      - name: build-win
        if: matrix.os == 'windows-latest'
        run: pnpm make:win

      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        if: startsWith(github.ref, 'refs/tags/')

      - name: release
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          name: Release ${{ steps.get_version.outputs.VERSION }}
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          files: |
            release/${{ steps.get_version.outputs.VERSION }}/*.exe
            release/${{ steps.get_version.outputs.VERSION }}/*.zip
            release/${{ steps.get_version.outputs.VERSION }}/*.dmg
            release/${{ steps.get_version.outputs.VERSION }}/*.AppImage
            release/${{ steps.get_version.outputs.VERSION }}/*.snap
            release/${{ steps.get_version.outputs.VERSION }}/*.deb
            release/${{ steps.get_version.outputs.VERSION }}/*.rpm
            release/${{ steps.get_version.outputs.VERSION }}/*.tar.gz
            release/${{ steps.get_version.outputs.VERSION }}/*.yml
            release/${{ steps.get_version.outputs.VERSION }}/*.blockmap
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
